Please replace this text with ~50 lines of terminal history.

Do a query to see all the bounties
db.bounties.find()

Do a query to find the bounty whose client is Time Bureau
db.bounties.find({client:"Time Bureau"})

Do a query to find the bounties who have been captured
db.bounties.find({captured:true})

Do a query specific to the bounty you inserted
db.bounties.findOne({name:"Malcolm Reynolds"})

Do a query to just return the names of all the bounties
db.bounties.find().forEach(function(doc) { print("Name: "+ doc.name) })



Starbuck and the Captain have come to an understanding. Remove her record
db.bounties.remove({name:"Starbuck"})

find and remove the duplicate record - be sure to JUST remove the one copy
db.bounties.deleteOne({name:"Han Solo"})


Find the bounties that are greater than 100000
db.bounties.find({reward:{$gt:100000}})

Find the bounties that are less than 1000
db.bounties.find({reward:{$lt:1000}})

Find the bounties that are less than or equal to 1000
db.bounties.find({reward:{$lte:1000}})

Find the bounty with the hunter Nebula
db.bounties.find({hunters:"Nebula"}).pretty()

Find the bounty with the ship Waverider OR Serenity
db.bounties.find({$or:[{ship:"Waverider"},{ship:"Serenity"}]})

Find the bounty who is not captured AND has whose client is Ayesha High Priestess of the Sovereign
db.bounties.find({$and:[{captured:false},{client:"Ayesha High Priestess of the Sovereign"}]}).pretty()

Increase all the bounties by 333333
db.bounties.updateMany({},{$inc:{reward:333333}})

Multiply all the bounties by 2
db.bounties.updateMany({},{$mul:{reward:2}})

Add Bobba Fett as a hunter for Malcolm Reynolds
db.bounties.update({name:"Malcolm Reynolds"},{$push:{hunters:"Bobba Fett"}})

Add Bobba Fett as a hunter for the one that has the ship Waverider
db.bounties.update({ship:"Waverider"},{$push:{hunters:"Bobba Fett"}})

Find and remove Dengar the bounty hunter
db.bounties.update({},{$pull:{hunters:"Dengar"}})


Upsert is used with update method which creates a new document if the query does not retrieve any documents matching the query parameters.

Try giving a lastSeen field to Han Solo, with the property yesterday (we haven't set his yet)
db.bounties.update({name:"Han Solo"},{$set:{lastSeen:"yesterday"}},{upsert:true})

Try giving all bounties that are not Han Solo a new field of lastSeen - with a value of last week
db.bounties.updateMany({name:{$ne:"Han Solo"}},{$set:{lastSeen:"last week"}},{upsert:true})